# Matching and Extracting Data
# re.search()
# re.findall()
# [0-9] : One or more digits

# 매칭이나 추출을 할 때는 어떤 약식을 주고 정규식으로 된 문자열 패턴을 주겠죠
# 각 줄을 살피면서 만족하는지 살펴보는데
# 그걸 리스트에 모아보고 싶어 진다.
# findall()을 사용 할 것이다.

# findall() : 탐색하면 True/False가 나온다
# 주어진 패턴을 만족하는 문자열들의 리스트를 준다.
# 만족하는 것이 4개라면 리스트에 4개가 나온다
# 만족하는게 하나도 없다면 빈 리스트가 출력 된다.
 
# search() 대신 findall()를 사용 했다.
import re
x = 'My 2 favorite numbers are 19 and 42'
# 탐색 대상 문자열(x)을 매개 변수로 넘겨 주고
# 이떤 패턴을 찾을지를 정규식으로 넘겨주고 있다.
y = re.findall('[0-9]+', x)
# []를 사용한 표현은 문자 하나를 나타낸다. 그냥 문자 한나이다
# 대신 괄호 안 조건에 포함되는 문자이여야 한다.
# 0-9이니까 한자 숫자라는 것이다.
# 0-9 중에 딱 한 문자가 온다
# [0-9]+ 이렇게 한 문자가 있는데 +가 적용된다. 그러면 전체 표현은
# 한 자리 이상의 숫자가 된다.

# 한 자리 이상으로 된 숫자를 찾아 낸다
print(y)   # ['2', '19', '42']

# A,E,I,O,U로 하면 
# [AEIOU] 은 한 문자인데
# [AEIOU]+ 은 하나 이상이된다.
# 그러면 A도 만족하고, E도 될것고, I도, O도 될 것이다.
# + 때문에 하나 이상도 된다는 말이다. 하나보다 많기만 하면 된다.
# 대문자 AEIOU는 문자의 집합이고, 그리고 하나 이상의 대문자

# My는 대문자이긴 한데, M으로 해당되지 않음
# 그리고는 대문자가 없어 아무것도 찾을 수 없다.
x = 'My 2 favorite numbers are 19 and 42'
y = re.findall('[AEIOU]+',x)
# 빈 리스트만 출력한다.
# 왜냐하면 False는 리턴하지 않는다.
print(y)   # []