# Warning: Greedy Matching

# 작동방식이 양식을 갖고 
# 줄들을 쭉 순회하면서 단어를 맞추어본다
# 그런데 작동방식이 직관적이지 못 하다

# 여기서 쓰이는 개념은 '탐욕적인 매칭 방식' 이다
# 가능한 문자열이 여러 개 있을 때 겹치는 것도 있을 텐데
# 그 중 가장 긴 것을 택한다.

# ^F.+:
# F로 시작해서 아무 문자나 오다가 :으로 끝나는 패턴
# F로 시작해야 한다.
# .+ 하나 이사의 문자들
# :이 나왔다.
# From: Using the
# 그런데 :이 하나 더 있다.
# 그러면 .+ 사이는 전부 하나 이상의 아무 문자가 되고
# :를 어떤 것을 선택해야 하는 문제가 생긴다
# 이때 탐욕적인 매칭 방식이 적용되는데
# 둘 중에 더 긴 걸로 결정한다
# 그래서 직관적이지 못 한 것이다.
# 앞에 :이 있는데도 전체를 가져왔으니 탐욕적인 매칭이 된다.
# 뒤에 :이 문자열이 더 길기 때문이다.
# 언제 든지 문자열을 고르게 되면 더 긴 것을 고른다는게 탐욕적이다.
# 아마 더 크거나 가장 긴 문자열을 선호하는 경향을 표현 한 것이다.


import re
x = 'From: Using the : character'
y = re.findall('^F.+:', x)
print(y)   # ['From: Using the :']